# K8S服务定义
apiVersion: v1
kind: Service
metadata:
  name: ticho-trace-dev
  labels:
    app: ticho-trace-dev
    version: v1
spec:
  # 使用NodePort类型（替换默认ClusterIP，便于测试）
  type: NodePort
  sessionAffinity: None
  selector:
    app: ticho-trace-dev
    version: v1
  ports:
    - name: http-web
      protocol: TCP
      port: 8000
      targetPort: 8000
      nodePort: 7000
---
# K8S工作负载定义
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ticho-trace-dev
    version: v1
  name: ticho-trace-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ticho-trace-dev
      version: v1
  template:
    metadata:
      labels:
        app: ticho-trace-dev
        version: v1
    spec:
      # 设置Docker仓库密钥（用于拉取镜像）
      # 通过同K8s namespace的密钥secret名称来指定镜像仓库及凭证信息
      imagePullSecrets:
        - name: aliyun-registry
      volumes:
        - name: host-time
          hostPath:
            path: /etc/localtime
            type: ''
      containers:
        - name: ticho-trace-dev
          # 设置Docker镜像（同Jenkinsfile脚本中的环境变量）
          image: $REGISTRY/$DOCKERHUB_NAMESPACE/$MODULE-$PROFILE
          imagePullPolicy: Always
          # 资源限制
          resources:
            requests:
              cpu: 10m
              memory: 256Mi
            limits:
              cpu: '1'
              memory: 512Mi
          volumeMounts:
            - name: host-time
              readOnly: true
              mountPath: /etc/localtime
          command:
            - java
            - '-jar'
            - '-Xms256m'
            - '-Xmx512m'
            - '-Xmn170m'
            - '-Dserver.port=8080'
            - /app.jar
          # 健康检查
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            successThreshold: 1
            failureThreshold: 3
          # 容器端口映射
          ports:
            - name: http-web
              protocol: TCP
              containerPort: 8080
  strategy:
    # 滚动更新策略
    type: RollingUpdate
    rollingUpdate:
      # 最多不可用比例
      maxUnavailable: 25%
      # 最多新增比例
      maxSurge: 25%
