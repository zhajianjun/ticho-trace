<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <!-- @formatter:off -->
    <!--1.日志格式和颜色渲染 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
    <!-- 增加如下的TLog MDC Listener -->
    <!-- 3.一些属性值定义 -->
    <!-- 彩色日志格式 -->
    <property name="console.log.pattern" value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}) %clr([%thread]) %highlight(%-5level) %boldMagenta(%logger{50}) %clr(%X{trace}) : %msg%n"/>
    <!--日志格式-->
    <property name="log.pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} %X{trace} %msg%n"/>"
    <!--日志最大的历史 7天-->
    <property name="log.maxHistory" value="7"/>
    <!--日志最大的文件大小 100MB-->
    <property name="log.maxFileSize" value="10MB"/>
    <property name="log.path" value="./logs/@artifactId@"/>
    <!-- 4.日志输出 -->
    <!-- 4.1.控制台打印 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${console.log.pattern}</pattern>
        </encoder>
        <!-- 按临界值过滤日志：低于DEBUG以下级别被抛弃 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
    </appender>

    <!-- 4.6. 所有日志 -->
    <appender name="all" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/all.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${log.pattern}</pattern>
        </encoder>
        <!-- 按临界值过滤日志：低于DEBUG以下级别被抛弃 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 滚动日志文件保存格式 -->
            <fileNamePattern>${log.path}/all.%d{yyyy-MM-dd}.%i.gz</fileNamePattern>
            <!-- 最大保存历史时间 -->
            <maxHistory>${log.maxHistory}</maxHistory>
            <!-- 最大文件大小 -->
            <maxFileSize>${log.maxFileSize}</maxFileSize>
        </rollingPolicy>
    </appender>

    <!-- 5.异步日志输出 -->
    <!-- 5.1. 异步console日志 -->
    <appender name="async-console" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>1024</queueSize>
        <!--打印堆栈信息-->
        <includeCallerData>true</includeCallerData>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="console"/>
    </appender>


    <!-- 5.6. 异步all日志 -->
    <appender name="async-all" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>1024</queueSize>
        <!--打印堆栈信息-->
        <includeCallerData>true</includeCallerData>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="all"/>
    </appender>

    <springProperty scope="context" name="logUrl" source="ticho.trace.logUrl" defaultValue = ""/>
    <springProperty scope="context" name="pushLog" source="ticho.trace.pushLog" defaultValue = "false"/>
    <springProperty scope="context" name="secret" source="ticho.trace.secret" defaultValue = ""/>
    <springProperty scope="context" name="appName" source="spring.application.name" defaultValue = "UNKNOWN"/>
    <springProperty scope="context" name="env" source="spring.profiles.active" defaultValue = "UNKNOWN"/>

    <appender name="trace" class="top.ticho.tool.trace.core.logback.DistributedLogAppender">
        <appName>${appName}</appName>
        <env>${env}</env>
        <url>${logUrl}</url>
        <pushLog>${pushLog}</pushLog>
        <secret>${secret}</secret>
        <pushSize>50</pushSize>
        <flushInterval>1000</flushInterval>
    </appender>

    <root level="INFO">
        <appender-ref ref="async-console"/>
        <appender-ref ref="async-all"/>
        <appender-ref ref="trace"/>
    </root>

</configuration>